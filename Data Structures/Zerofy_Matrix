#1.8 Python | Write an algorithm such that if an element in an MxN matrix is 0, its entire row and column are set to 0

def zerofy_matrix(matrix):

  # by marking zeros only in the first row and column, at the end, we can go back and find those zero markings and 
  # zerofy its entire, respective row and column

  firstColumnHasZeros = False
  
  for i in range(len(matrix)):
    if matrix[i][0] == 0:
      firstColumnHasZeros = True
      
  firstRowHasZeros = False
  
  for i in range(len(matrix[0])):
    if matrix[0][i] == 0:
      firstRowHasZeros = True
      
  # iterate through and mark out where the zeros are:
  
  for i in range(1, len(matrix)):
    for j in range(1, len(matrix[0])):
      if matrix[i][j] == 0:
        matrix[0][j] = 0
        matrix[i][0] = 0
        
  # zerofy the marked columns and rows
  
  for i in range(0, len(matrix)):
    if (matrix[i][0] == 0):
      for j in range(1, len(matrix[0])):
        matrix[i][j] = 0
        
  for i in range(0, len(matrix[0])):
    if (matrix[0][i] == 0):
      for j in range(1, len(matrix)):
        matrix[j][i] = 0
        
  # go back and check for marked zeros and if necessary, zerofy the first column and the first row
  
  if firstRowHasZeros:
    for i in range(0, len(matrix[0])):
      matrix[0][i] = 0
  if firstColumnHasZeros:
    for i in range(0, len(matrix)):
      matrix[i][0] = 0
  return matrix
  

# output code:

matrix = [[1, 1, 1], 
          [0, 1, 1],
          [1, 1, 1]]
          
print zerofy_matrix(matrix)

# outputs: [[0, 1, 1],
#           [0, 0, 0],
#           [0, 1, 1]]
  
